{"title":"shell编程实践","uid":"0c98adb549c320eeb63bf21d0f37524f","slug":"shell","date":"2022-04-23T01:21:53.000Z","updated":"2022-12-26T04:21:49.844Z","comments":true,"path":"api/articles/shell.json","keywords":null,"cover":[],"content":"<h1 id=\"shell-编程实践\"><a href=\"#shell-编程实践\" class=\"headerlink\" title=\"shell 编程实践\"></a>shell 编程实践</h1><h2 id=\"使用-shell-编写杨辉三角\"><a href=\"#使用-shell-编写杨辉三角\" class=\"headerlink\" title=\"使用 shell 编写杨辉三角\"></a>使用 shell 编写杨辉三角</h2><img src=\"/post/shell/yh1.png\">\n\n<h3 id=\"回顾排列组合\"><a href=\"#回顾排列组合\" class=\"headerlink\" title=\"回顾排列组合\"></a>回顾排列组合</h3><p>从 5 个人中抽取 3 个人参加会议(3 个人不能是同一个人，即无重复)</p>\n<p>① 有顺序</p>\n<p>则有 5×4×3 中可能(抽第一个 5 种,第二个 4 种，第三个 3 中(从剩下三个人中选))</p>\n<p>即从 n 个人中抽取 r 个人，一共有 n×(n-1)×…×(n-r)中可能</p>\n<p>即排列公式<br><img src=\"/post/shell/pl.png\"></p>\n<p>② 无顺序</p>\n<p>上面的抽取的三人中，我们给他们分别排了序号，即使是抽取的相同三人，也因为顺序不同是不同的情况。现在我们无序地抽取三人，则基于 5×4×3 的基础上，要去掉重复的情况，选取的三人有 3×2×1 种排序方式，因此需要除以重复的情况，得到不重复的抽取三人的方法数</p>\n<p>即组合公式<br><img src=\"/post/shell/zh.png\"></p>\n<h3 id=\"回顾二项式定理\"><a href=\"#回顾二项式定理\" class=\"headerlink\" title=\"回顾二项式定理\"></a>回顾二项式定理</h3><p><strong>1</strong> _n-1&#x3D;0_，s&#x3D;2⁰&#x3D;0,(a+b)⁰&#x3D;1</p>\n<p><strong>1 1</strong> <em>n-1&#x3D;1</em>,s&#x3D;2¹&#x3D;2,(a+b)¹&#x3D;a+b</p>\n<p><strong>1 2 1</strong> <em>n-1&#x3D;2</em>,s&#x3D;2²,(a+b)²&#x3D;a²+2ab+b²</p>\n<p><strong>1 3 3 1</strong> <em>n-1&#x3D;3</em>,s&#x3D;2³,(a+b)³&#x3D;a³+3a²b+3ab²+b³</p>\n<p><strong>1 4 6 4 1</strong> <em>n-1&#x3D;4</em>,s&#x3D;2⁴,(a+b)⁴&#x3D;a⁴+4a³b+6a²b²+4ab³+b⁴</p>\n<p><strong>1 5 10 10 5 1</strong> <em>n-1&#x3D;5</em>,s&#x3D;2⁵,…</p>\n<p>**1 6 15 20 15 6 1 ** <em>n-1&#x3D;6</em>,s&#x3D;⁶,…</p>\n<p>二项式定理</p>\n<img src=\"/post/shell/exs.png\">\n\n<p>先看这个例子(x+y)³&#x3D;(x+y)(x+y)(x+y)</p>\n<p>三个式子相乘，可能的情况是：(从取 x 的角度看)</p>\n<table>\n<thead>\n<tr>\n<th>第一项</th>\n<th>第二项</th>\n<th>第三项</th>\n<th>概率</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>三个都是 x：C₃³&#x3D;1</td>\n</tr>\n<tr>\n<td>x</td>\n<td>x</td>\n<td>y</td>\n<td>两个 x，一个 y：C₃²&#x3D;3</td>\n</tr>\n<tr>\n<td>x</td>\n<td>y</td>\n<td>x</td>\n<td></td>\n</tr>\n<tr>\n<td>y</td>\n<td>x</td>\n<td>x</td>\n<td></td>\n</tr>\n<tr>\n<td>x</td>\n<td>y</td>\n<td>y</td>\n<td>一个 x，两个 y：C₃¹&#x3D;3</td>\n</tr>\n<tr>\n<td>y</td>\n<td>x</td>\n<td>y</td>\n<td></td>\n</tr>\n<tr>\n<td>y</td>\n<td>y</td>\n<td>x</td>\n<td></td>\n</tr>\n<tr>\n<td>y</td>\n<td>y</td>\n<td>y</td>\n<td>取 0 个 x，3 个 y：C₃⁰&#x3D;1</td>\n</tr>\n</tbody></table>\n<p>因此将(x+y)³&#x3D;(x+y)(x+y)(x+y)展开可以得到</p>\n<p>(x+y)³&#x3D;C₃⁰x⁰y³+C₃¹xy²+C₃²x²y+C₃³x³y⁰&#x3D;x³+3x²y+3xy²+y³</p>\n<p>因此在二项式定理中，展开以后有 n 项(a+b)相乘，假设从取 b 的角度看，可以全都不取 b(b⁰)、有一项取 b、两项取 b(b²)…m 项取 b(b<sup>m</sup>)，概率为 C<sub>n</sub><sup>m</sup>，故有</p>\n<img src=\"/post/shell/exs.png\">\n\n<h3 id=\"杨辉三角中的关系\"><a href=\"#杨辉三角中的关系\" class=\"headerlink\" title=\"杨辉三角中的关系\"></a>杨辉三角中的关系</h3><p>① 每个数等于上面两个数之和，左右对称</p>\n<p>即<em>C(n+1,i)&#x3D;C(n,i)+C(n,i-1)</em></p>\n<p>② 第 n 行有 n 项</p>\n<p>③ 前 n 行有 n(n+1)&#x2F;2 项，即 1+2+3+…+n</p>\n<p>回顾等差数列</p>\n<img src=\"/post/shell/dc1.png\">\n\n<img src=\"/post/shell/dc2.png\">\n\n<p>④ 第 n 行第 m 个数为 C<sub>n-1</sub><sup>m-1</sup></p>\n<p>⑤ 第 n 行的第 m 个数和第 n-m+1 个数相等</p>\n<p>⑥ 第 n 行的数字和为 2<sup>n-1</sup></p>\n<p>⑦ 二项式定理中(a+b)<sup>n</sup>的系数对应第 n+1 行的每一项</p>\n<p>⑧ 其他，如斐波那契数列</p>\n<h3 id=\"使用-shell-编写杨辉三角-1\"><a href=\"#使用-shell-编写杨辉三角-1\" class=\"headerlink\" title=\"使用 shell 编写杨辉三角\"></a>使用 shell 编写杨辉三角</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;请输入行数:&quot; n\necho &quot;1&quot;\n#打印第一行的1\nfor((i&#x3D;2;i&lt;&#x3D;n;i++))\n#从第2行循环到第1行\ndo\n  s&#x3D;1\n  echo -e &quot;1 \\c&quot;\n  #打印每一行第一个1\n  for((j&#x3D;1;j&lt;&#x3D;i-2;j++))\n  #第i行除去首尾两个1还剩i-2个数，依次循环打印\n  do\n    k&#x3D;$(($i-$j))\n    s&#x3D;$(($k*$s&#x2F;$j))\n    echo -e &quot;$s \\c&quot;\n  done\n  echo 1\n  #打印每一行最后一个1\ndone</code></pre>\n\n<p>首先观察这个规律，第 n 行第 m 项与第 m-1 项之间的倍数关系：</p>\n<p>① 第 m-1 项：C<sub>n-1</sub><sup>m-2</sup>&#x3D;(n-1)!&#x2F;(n-m+1)!(m-2)!</p>\n<p>② 第 m 项：C<sub>n-1</sub><sup>m-1</sup>&#x3D;(n-1)!&#x2F;(n-m)!(m-1)!</p>\n<p>②&#x2F;① 得(n-m+1)&#x2F;(m-1)</p>\n<p>而在上面得程序中，我们让 j 从 i 行的第 2 个数开始循环，即 j&#x3D;m-1</p>\n<p>因此我们可以得到上述程序中的前后倍数关系(i-j)&#x2F;j</p>\n<p>我们令每一行第一个式子为 s&#x3D;1，则每个式子都是前一个式子得(i-j)&#x2F;j 倍</p>\n<p>因此可以写成 s&#x3D;s*(i-j)&#x2F;j，通过循环我们就可以打印出每行得每个式子</p>\n<p>同时，你也可以写成这种形式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;请输入行数:&quot; n\necho &quot;1&quot;\n#打印第一行的1\nfor((i&#x3D;2;i&lt;&#x3D;n;i++))\n#从第2行循环到第1行\ndo\n  s&#x3D;1\n  echo -e &quot;1 \\c&quot;\n  #打印每一行第一个1\n  for((j&#x3D;2;j&lt;&#x3D;i-1;j++))\n  #j为每行第j个数\n  do\n    k&#x3D;$(($i-$j+1))\n    m&#x3D;$(($j-1))\n    s&#x3D;$(($k*$s&#x2F;$m))\n    echo -e &quot;$s \\c&quot;\n  done\n  echo 1\n  #打印每一行最后一个1\ndone</code></pre>\n\n<p>此时前后的倍数关系为(i-j+1)&#x2F;(j-1)</p>\n<p>现在让我们开始打印吧！</p>\n<p>①</p>\n<img src=\"/post/shell/yh1.png\">\n\n<img src=\"/post/shell/yh11.png\">\n\n<p>②</p>\n<img src=\"/post/shell/yh2.png\">\n\n<img src=\"/post/shell/yh22.png\">\n\n<h2 id=\"编写脚本生成脚本\"><a href=\"#编写脚本生成脚本\" class=\"headerlink\" title=\"编写脚本生成脚本\"></a>编写脚本生成脚本</h2><p>要求执行脚本后，会自动生成一个 test.sh 脚本，并赋予执行权限，同时在文件中加入以下注释信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\n#--------------------\n#Filename:test.sh&#x2F;&#x2F;此处会根据文件名自动更换\n#Revison:1.0\n#Date:2022-04-23&#x2F;&#x2F;此处自动更新时间\n#Author：Fishyoung\n#--------------------\n#Copyright：2022Fishyoung</code></pre>\n\n<img src=\"/post/shell/jb1.png\">\n\n<p>使用重定向将文本内容加入到脚本中</p>\n","text":"shell 编程实践使用 shell 编写杨辉三角 回顾排列组合从 5 个人中抽取 3 个人参加会议(3 个人不能是同一个人，即无重复) ① 有顺序 则有 5×4×3 中可能(抽第一个 5 种,第二个 4 种，第三个 3 中(从剩下三个人中选)) 即从 n 个人中抽取 r 个人，...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"},{"name":"脚本","slug":"脚本","count":1,"path":"api/tags/脚本.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#shell-%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">shell 编程实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-shell-%E7%BC%96%E5%86%99%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92\"><span class=\"toc-text\">使用 shell 编写杨辉三角</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E9%A1%BE%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88\"><span class=\"toc-text\">回顾排列组合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E9%A1%BE%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86\"><span class=\"toc-text\">回顾二项式定理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E4%B8%AD%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">杨辉三角中的关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-shell-%E7%BC%96%E5%86%99%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92-1\"><span class=\"toc-text\">使用 shell 编写杨辉三角</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">编写脚本生成脚本</span></a></li></ol></li></ol>","author":{"name":"Erraria","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"hadoop-集群搭建","uid":"4e4f31add73d915abf83a9e83faf2202","slug":"HADOOP-集群搭建","date":"2022-11-07T16:00:00.000Z","updated":"2022-12-26T16:22:04.745Z","comments":true,"path":"api/articles/HADOOP-集群搭建.json","keywords":null,"cover":[],"text":"设置固定 IPNAT 模式接入网络，要检查 windows 中网卡是否开启，并在属性中更改 ipv4 的配置信息 在虚拟机中的虚拟网络编辑器中,更改子网为所需要的 128 网段 在 master 中修改网卡配置文件： vim &#x2F;etc&#x2F;sysconfig&#x...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"note","slug":"note","count":4,"path":"api/categories/note.json"}],"tags":[{"name":"hadoop","slug":"hadoop","count":1,"path":"api/tags/hadoop.json"}],"author":{"name":"Erraria","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}