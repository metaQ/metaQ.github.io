[{"id":"58b7f561a82cc9dd7c27d8845a6fb9dd","title":"git","content":"","slug":"git","date":"2022-12-24T08:28:50.000Z","categories_index":"note","tags_index":"git","author_index":"Erraria"},{"id":"f41dafd82f2ec9dc49885e3686fd8f65","title":"thinkpad x100e windows7重装","content":"一台 10 年的老电脑\nMSDN，我告诉你：下载系统镜像准备另一台电脑，进入网站MSDN,我告诉你，下载对应镜像到自定义文件夹中(非 U 盘)\n\n\n启动盘制作下载 启动盘制作工具-rufus下载完成后，插入 U 盘\n打开软件的下载路径，双击打开 rufus-3.21.exe\n在 rufus 中，选择下载好的 windows7 镜像文件(.iso)。分区类型改为 MBR点击开始，静待下方提示完成\n更改启动方式启动盘制作完成后，插入 u 盘到需要重装的笔记本电脑中。在开机期间连续按 Enter键，直到显示 Startup Interrupt Menu（启动中断菜单）官网进入 BIOS 方法。按照提示按 F1 进入 BIOS。\n进入 boot(不同型号大同小异)，按F5/F6键上下切换，将 USB HDD 切换到第一个，按F10键保存并退出 官方视频教学 第 36 秒退出后将自动进入重装界面，或自行开机进入\n重装按提示点击即可,期间重启无需操作，等待安装完成\n\n\n\n\n如不想设置密码直接点击下一步\n\n自行搜索 windows7 产品密钥，或直接点击下一步\n\n使用推荐设置\n\n\n安装完成后如需显示桌面其他图标执行以下操作：\n\n\n\n\n若缺少驱动，前往驱动精灵官网下载驱动精灵，安装缺失驱动\n","slug":"thinkpad-x100e-windows7重装","date":"2022-12-24T05:36:28.000Z","categories_index":"note,family","tags_index":"windows7,thinkpad x100e","author_index":"Erraria"},{"id":"4e4f31add73d915abf83a9e83faf2202","title":"hadoop-集群搭建","content":"设置固定 IPNAT 模式接入网络，要检查 windows 中网卡是否开启，并在属性中更改 ipv4 的配置信息\n\n在虚拟机中的虚拟网络编辑器中,更改子网为所需要的 128 网段\n\n\n在 master 中修改网卡配置文件：\nvim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33\n\n修改 bootproto&#x3D;static，onboot&#x3D;yes，并添加 IP 地址、网关、子网掩码和 DNS 信息。重启网卡服务：\nservice network restart\n\n修改主机名hostnamecrl set-hostname master\n\n重启reboot\nxshell xftp 远程连接虚拟机NETSARANG 免费的许可证\n配置本地 yum 源进入&#x2F;etc&#x2F;yum.repos.d\ncd &#x2F;etc&#x2F;yum.repos.d\n\n禁用除了本地 yum 源 ：CentOS-Media.repo 以外的其他源，加文件名后缀.bak修改 CentOS-Media.repo 文件内容。将 baseurl 的值修改为“file:&#x2F;&#x2F;&#x2F;media&#x2F;”，将 gpgcheck 的值改为“0”，将 enabled 的值改为“1”。确保开启”已连接”使用\nmount &#x2F;dev&#x2F;sr0 &#x2F;media\n\n命令挂载本地 YUM 源。提示写保护则挂载成功。清理 yum 缓存\nyum clean all\n\n使用 yum 安装常用软件yum insatall -y vim zip openssh-server openssh-clients\n安装 Java下载 jdk 的 npm 包(以 jdk-8u281-linux-x64.rpm 为例)，使用 xfpt 传输到&#x2F;opt 目录下\n使用命令安装 jdk\nrpm -ivh jdk-8u281-linux-x64.rpm\n\n验证是否安装成功\njava -version\n\n安装 Hadoop 修改集群相关配置文件将 Hadoop 安装包 hadoop-3.1.4.tar.gz 上传至虚拟机 master 的&#x2F;opt 目录下\n进入&#x2F;usr&#x2F;local&#x2F;hadoop-3.1.4&#x2F;etc&#x2F;hadoop 目录，并修改 core-site.xml、hadoop-env.sh、yarn-env.sh、mapred-site.xml、yarn-site.xml、workers、hdfs-site.xml 共 7 个配置文件的内容。\ncore-site.xml\n&lt;configuration&gt;\n    &lt;property&gt;\n    &lt;name&gt;fs.defaultFS&lt;&#x2F;name&gt;\n      &lt;value&gt;hdfs:&#x2F;&#x2F;master:8020&lt;&#x2F;value&gt;\n      &lt;&#x2F;property&gt;\n    &lt;property&gt;\n      &lt;name&gt;hadoop.tmp.dir&lt;&#x2F;name&gt;\n      &lt;value&gt;&#x2F;var&#x2F;log&#x2F;hadoop&#x2F;tmp&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;\n\nhadoop-env.sh\nexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_281-amd64\n&#x2F;&#x2F;修改 JAVA_HOME 的值为 JDK 所在目录（注意版本，确保文件名正确&#x2F;usr&#x2F;java&#x2F;...）\n&#x2F;&#x2F;(文件内高亮查找:&#x2F;JAVA_HOME)\n\nyarn-env.sh\nexport JAVA_HOME&#x3D;&#x2F;home&#x2F;y&#x2F;libexec&#x2F;jdk1.6.0&#x2F;\n\nexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_281-amd64\n\nmapred-site.xml\n&lt;configuration&gt;\n&lt;property&gt;\n    &lt;name&gt;mapreduce.framework.name&lt;&#x2F;name&gt;\n    &lt;value&gt;yarn&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;!-- jobhistory properties --&gt;\n&lt;property&gt;\n    &lt;name&gt;mapreduce.jobhistory.address&lt;&#x2F;name&gt;\n    &lt;value&gt;master:10020&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n     &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;&#x2F;name&gt;\n     &lt;value&gt;master:19888&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n  &lt;name&gt;yarn.app.mapreduce.am.env&lt;&#x2F;name&gt;\n  &lt;value&gt;HADOOP_MAPRED_HOME&#x3D;$&#123;HADOOP_HOME&#125;&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n  &lt;name&gt;mapreduce.map.env&lt;&#x2F;name&gt;\n  &lt;value&gt;HADOOP_MAPRED_HOME&#x3D;$&#123;HADOOP_HOME&#125;&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n  &lt;name&gt;mapreduce.reduce.env&lt;&#x2F;name&gt;\n  &lt;value&gt;HADOOP_MAPRED_HOME&#x3D;$&#123;HADOOP_HOME&#125;&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;\n\nyarn-site.xml\n&lt;configuration&gt;\n&lt;!-- Site specific YARN configuration properties --&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.hostname&lt;&#x2F;name&gt;\n    &lt;value&gt;master&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8032&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n &lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8030&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8088&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8090&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8031&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.admin.address&lt;&#x2F;name&gt;\n    &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8033&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.local-dirs&lt;&#x2F;name&gt;\n    &lt;value&gt;&#x2F;data&#x2F;hadoop&#x2F;yarn&#x2F;local&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.log-aggregation-enable&lt;&#x2F;name&gt;\n    &lt;value&gt;true&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.remote-app-log-dir&lt;&#x2F;name&gt;\n    &lt;value&gt;&#x2F;data&#x2F;tmp&#x2F;logs&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n&lt;property&gt;\n &lt;name&gt;yarn.log.server.url&lt;&#x2F;name&gt;\n &lt;value&gt;http:&#x2F;&#x2F;master:19888&#x2F;jobhistory&#x2F;logs&#x2F;&lt;&#x2F;value&gt;\n &lt;description&gt;URL for job history server&lt;&#x2F;description&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n   &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;&#x2F;name&gt;\n    &lt;value&gt;false&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n &lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services&lt;&#x2F;name&gt;\n    &lt;value&gt;mapreduce_shuffle&lt;&#x2F;value&gt;\n  &lt;&#x2F;property&gt;\n  &lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;&#x2F;name&gt;\n      &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;&#x2F;value&gt;\n      &lt;&#x2F;property&gt;\n&lt;property&gt;\n        &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;&#x2F;name&gt;\n        &lt;value&gt;2048&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n &lt;property&gt;\n        &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;&#x2F;name&gt;\n        &lt;value&gt;512&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n &lt;property&gt;\n        &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;&#x2F;name&gt;\n        &lt;value&gt;4096&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n &lt;property&gt;\n    &lt;name&gt;mapreduce.map.memory.mb&lt;&#x2F;name&gt;\n    &lt;value&gt;2048&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n &lt;property&gt;\n    &lt;name&gt;mapreduce.reduce.memory.mb&lt;&#x2F;name&gt;\n    &lt;value&gt;2048&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n &lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;&#x2F;name&gt;\n    &lt;value&gt;1&lt;&#x2F;value&gt;\n &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;\n\nworkers\n&#x2F;&#x2F;删除 localhost，添加以下内容\nslave1\nslave2\nslave3\n\nhdfs-site.xml\n&lt;configuration&gt;\n&lt;property&gt;\n    &lt;name&gt;dfs.namenode.name.dir&lt;&#x2F;name&gt;\n    &lt;value&gt;file:&#x2F;&#x2F;&#x2F;data&#x2F;hadoop&#x2F;hdfs&#x2F;name&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n    &lt;name&gt;dfs.datanode.data.dir&lt;&#x2F;name&gt;\n    &lt;value&gt;file:&#x2F;&#x2F;&#x2F;data&#x2F;hadoop&#x2F;hdfs&#x2F;data&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n     &lt;name&gt;dfs.namenode.secondary.http-address&lt;&#x2F;name&gt;\n     &lt;value&gt;master:50090&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;property&gt;\n     &lt;name&gt;dfs.replication&lt;&#x2F;name&gt;\n     &lt;value&gt;3&lt;&#x2F;value&gt;\n&lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;\n\n为了防止 Hadoop 集群启动失败，需要修改 Hadoop 集群启动和关闭服务的文件。启动和关闭服务的文件在&#x2F;usr&#x2F;local&#x2F;hadoop-3.1.4&#x2F;sbin&#x2F;目录下，需要修改的文件分别是 start-dfs.sh、stop-dfs.sh、start-yarn.sh 和 stop-yarn.sh。\nstart-dfs.sh、stop-dfs.sh\nHDFS_DATANODE_USER&#x3D;root\nHDFS_DATANODE_SECURE_USER&#x3D;hdfs\nHDFS_NAMENODE_USER&#x3D;root\nHDFS_SECONDARYNAMENODE_USER&#x3D;root\n\nstart-yarn.sh 和 stop-yarn.sh\nYARN_RESOURCEMANAGER_USER&#x3D;root\nHADOOP_SECURE_DN_USER&#x3D;yarn\nYARN_NODEMANAGER_USER&#x3D;root\n\n修改主机与 IP 地址映射\n192.168.128.130 master master.centos.com\n192.168.128.131 slave1 salve1.centos.com\n192.168.128.132 slave2 slave2.centos.com\n192.168.128.133 slave3 slave3.centos.com\n\n克隆虚拟机创建 master 的完整克隆 slave1、slave2、slave3分别修改网卡配置文件和主机名\nvim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33\n\nservice network restart&#x2F;&#x2F;重启网卡服务\n\nhostnamectl set-hostname slave1\n\n验证是否配置成功，在 master 上 ping 一下各个节点\nping slave1\nping slave2\nping slave3\n\n配置 ssh 免密登录master 上创建 ssh 密钥，三次 enter 键\nssh-keygen -t rsa\n\n使用 ssh-copy-id 命令将公钥复制至远程机器中。按提示输入 yes 和密码\nssh-copy-id –i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub master\nssh-copy-id –i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub slave1\nssh-copy-id –i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub slave2\nssh-copy-id –i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub slave3\n\n验证 SSH 是否能够无密钥登录。在 master 主节点下分别输入“ssh slave1”“ssh slave2”“ssh slave3”\n配置时间同步服务检查 master 和各节点虚拟机是否连接\n在 master 和各节点重新挂在本地 yum 源\nmount &#x2F;dev&#x2F;sr0 &#x2F;media\n\n安装 ntp 服务\nyum install -y ntp\n\n修改 master 的&#x2F;etc&#x2F;ntp.conf 文件，注释掉以 server 开头的行，添加：\nrestrict 192.168.1.0 mask 255.255.255.0 nomodify notrap\nserver 127.127.1.0\nfudge 127.127.1.0 stratum 10\n\n修改 slave1、slave2、slave3 的&#x2F;etc&#x2F;ntp.conf 文件，注释掉 server 开头的行，并添加:server master\n关闭 master 和 slave1、slave2、slave3 防火墙\nsystemctl stop firewalld\nsystemctl disable firewalld\nsystemctl status firewalld &#x2F;&#x2F;状态为 dead\n\n在 master 启动 ntp\nsystemctl start ntpd\nsystemctl enable ntpd\nsystemctl status ntpd&#x2F;&#x2F;查看状态为 active 说明成功\n\nslave1、slave2、slave3 同步时间\nntpdate master\n\nslave1、slave2、slave3 启动 ntp\nsystemctl start ntpd\nsystemctl enable ntpd\nsystemctl status ntpd&#x2F;&#x2F;查看状态为 active 说明成功\n\n配置环境变量和格式化 NameNode在 master 和 slave1、slave2、slave3 修改&#x2F;etc&#x2F;profile 文件，注意文件版本名。使用 source &#x2F;etc&#x2F;profile 生效\nexport HADOOP_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;hadoop-3.1.4\nexport PATH&#x3D;$HADOOP_HOME&#x2F;bin:$PATH:$JAVA_HOME&#x2F;bin\n\n在 master 和 slave1、slave2、slave3 输入 hdfs namenode -format 格式化\n\n\n启动和关闭集群启动\ncd $HADOOP\nsbin&#x2F;start-dfs.sh\nsbin&#x2F;start-yarn.sh\nsbin&#x2F;mr-jobhistory-daemon.sh start historyserver\n\n\n\n关闭\ncd $HADOOP\nsbin&#x2F;stop-dfs.sh\nsbin&#x2F;stop-yarn.sh\nsbin&#x2F;mr-jobhistory-daemon.sh stop historyserver\n\n监控集群修改 windows 中的 C:\\Windows\\System32\\drivers\\etc\\hosts 文件(需要在属性中开启 user 的读写权限)\n192.168.128.130 master master.centos.com\n192.168.128.131 slave1 salve1.centos.com\n192.168.128.132 slave2 slave2.centos.com\n192.168.128.133 slave3 slave3.centos.com\n\n集群监控\nhttp://master:9870 &#x2F;&#x2F;hdfs 监控http://master:8088 &#x2F;&#x2F;yarn 监控http://master:19888 &#x2F;&#x2F;jobhistory 日志监控\n","slug":"HADOOP-集群搭建","date":"2022-11-07T16:00:00.000Z","categories_index":"note","tags_index":"hadoop","author_index":"Erraria"},{"id":"45b05c0adc7d6b51711d3e13e977b9ba","title":"hexo","content":"Hexo 中文官网\nNode.Js 官网\nGit 官网\n自行安装\n全局安装 Hexonpm install -g hexo-cli\n\n查看版本\nhexo -v\n\n文件夹初始化hexo init\n\n工具安装npm install hexo-server --save &#x2F;&#x2F;安装服务器启动工具\nnpm install hexo-deployer-git --save &#x2F;&#x2F;安装自动部署工具\n\n建立 Github 仓库name/ name.github.io\n勾选Add a README file\n远程连接 Github生成 ssh keys\nssh-keygen -t rsa -C &quot;email&quot; &#x2F;&#x2F;email指github注册邮箱\n\n查看，复制 ssh keys，添加至 GitHub\ncat ~&#x2F;.ssh&#x2F;id_rsa.pub\n\n测试是否成功：\nHi metaQ! You’ve successfully authenticated, but GitHub does not provide shell access.\nssh -T git@github.com\n\ngit 与 github 远程连接\ngit config --global &quot;name&quot;\ngit config --global &quot;email&quot;\n\n部署hexo s &#x2F;&#x2F;启动服务器，生成http:&#x2F;&#x2F;localhost:4000，启动期间自动更新\nhexo g &#x2F;&#x2F;生成静态文件\nhexo d &#x2F;&#x2F;部署到github\n\n常见问题4000 端口被占用netstat -aon|findstr &quot;4000&quot; &#x2F;&#x2F;查看被占用端口的PID（最后的数字即PID），以23828为例\ntasklist|findstr &quot;23828&quot; &#x2F;&#x2F;输入PID，查看占用进程的软件，以WinStore.App.exe为例\ntaskkill &#x2F;f &#x2F;t &#x2F;im WinStore.App.exe &#x2F;&#x2F;杀死进程\n\n图片无法显示npm install hexo-asset-image --save &#x2F;&#x2F;下载图片上传插件\n\n打开node_modules\\hexo-asset-image\\index.js，内容更改为以下代码：\n&#39;use strict&#39;;\nvar cheerio &#x3D; require(&#39;cheerio&#39;);\n\n&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string\nfunction getPosition(str, m, i) &#123;\n  return str.split(m, i).join(m).length;\n&#125;\n\nvar version &#x3D; String(hexo.version).split(&#39;.&#39;);\nhexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;\n  var config &#x3D; hexo.config;\n  if(config.post_asset_folder)&#123;\n    \tvar link &#x3D; data.permalink;\n\tif(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)\n\t   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;\n\telse\n\t   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;\n\t&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.\n\tvar endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;\n    link &#x3D; link.substring(beginPos, endPos);\n\n    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];\n    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;\n      var key &#x3D; toprocess[i];\n\n      var $ &#x3D; cheerio.load(data[key], &#123;\n        ignoreWhitespace: false,\n        xmlMode: false,\n        lowerCaseTags: false,\n        decodeEntities: false\n      &#125;);\n\n      $(&#39;img&#39;).each(function()&#123;\n    \tif ($(this).attr(&#39;src&#39;))&#123;\n    \t\t&#x2F;&#x2F; For windows style path, we replace &#39;\\&#39; to &#39;&#x2F;&#39;.\n    \t\tvar src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\\\&#39;, &#39;&#x2F;&#39;);\n    \t\tif(!&#x2F;http[s]*.*|\\&#x2F;\\&#x2F;.*&#x2F;.test(src) &amp;&amp;\n    \t\t   !&#x2F;^\\s*\\&#x2F;&#x2F;.test(src)) &#123;\n    \t\t  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.\n    \t\t  &#x2F;&#x2F; In addition, to support multi-level local directory.\n    \t\t  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;\n    \t\t\treturn elem !&#x3D; &#39;&#39;;\n    \t\t  &#125;);\n    \t\t  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;\n    \t\t\treturn elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;\n    \t\t  &#125;);\n    \t\t  if(srcArray.length &gt; 1)\n    \t\t\tsrcArray.shift();\n    \t\t  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);\n    \t\t  $(this).attr(&#39;src&#39;, config.root + link + src);\n    \t\t  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);\n    \t\t&#125;\n    \t&#125;else&#123;\n    \t\tconsole.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);\n    \t\tconsole.info&amp;&amp;console.info($(this));\n    \t&#125;\n      &#125;);\n      data[key] &#x3D; $.html();\n    &#125;\n\n  &#125;\n&#125;);\n\n将 _config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 &#x2F;&#x2F;每次创建文章会生成同名文件夹，将图片存放在这个资源文件夹中\n\n&#123;% asset_img example.jpg 描述 %&#125; &#x2F;&#x2F;通过相对路径引用example.jpg图片\n\nVS Code 终端无法运行以管理员身份运行powershell\n输入set-ExecutionPolicy RemoteSigned\n输入A &#x2F;&#x2F;解决权限问题\n\nfatal: unable to access\n\n连接 github 不成功，不用担心，继续尝试吧！\ngithub 仓库存在两个分支deploy:\n  type: git\n  repository: 仓库网址\n  branch: main &#x2F;&#x2F;问题出在这里，若选择master，会新建一个master分支\n\ngithub pages build and deployment 失败显示\nerror：docker pull failed with code1\n解决方案：重新安装 hexo 部署工具\nnpm install hexo-deployer-git --save\n\nWarning: Accessing non-existent property ‘lineno’ of module exports inside circular dependency添加到 package.json\n&quot;resolutions&quot;: &#123;\n  &quot;stylus&quot;: &quot;^0.54.8&quot;\n&#125;\n\n执行\nnpm install --global yarn &#x2F;&#x2F;安装yarn\nyarn remove hexo-renderer-stylus\nyarn add hexo-renderer-stylus\n\nERROR Render HTML failed:\n\n\n\n\n\n\n\n\n\nUnhandled rejection ReferenceError: D:\\blog\\themes\\snail\\layout\\layout.ejs:1614| 15|\n\n\n\n\n\n\n\n\n\n\n\n16| &lt;%- partial(‘_partial&#x2F;header’,{cache: true}) %&gt;17|18| &lt;%- partial(‘_partial&#x2F;nav’,{cache: true}) %&gt;19|\n\n\n\n\n\n\n\n\n\n\n\nD:\\blog\\themes\\snail\\layout_partial\\header.ejs:7068| 69| \n\n\n\n\n\n\n\n\n\n\n\n70| Words &lt;%&#x3D; wordcount(page.content) %&gt; and71| Reading Time &lt;%&#x3D; min2read(page.content) %&gt; Minutes72| 73| \n\n\n\n错误指示 16，70，可以排查出是该主题的 hexo-wordcount 错误，以至于无法打开文章\ngithub 给出安装方法GitHub - willin&#x2F;hexo-wordcount: A Word Count Plugin for Hexo\nyarn add hexo-wordcount\n# or\nnpm i --save hexo-wordcount\n","slug":"HEXO","date":"2022-01-16T16:00:00.000Z","categories_index":"note","tags_index":"hexo","author_index":"Erraria"}]